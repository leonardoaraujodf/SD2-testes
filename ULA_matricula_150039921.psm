;==============================================================
;PROGRAMA QUE REALIZA OPERAÇÕES COM BITS DEPENDENDO DOS VALORES
;INSERIDOS NA CHAVE SW.
;
;A -> NUMERO A
;B -> NUMERO B
;SELEC -> SELECAO DE OPERACAO
;
;FORMATO DAS ENTRADAS:
;
;CHAVES: |_|_|_|_|_|_|_|_|
;         7 6 5 4 3 2 1 0
;            
; A = SW [2:0]
; B = SW [5:3]
; SELEC = SW [7:6]
;
;OPERACOES ESCOLHIDAS 
;
;     SELEC | OPERACAO
;       00  |  A - B
;       01  |  A>>B 
;       10  |  A/2
;	11  |  A<<B 
;
;==============================================================
CONSTANT SW, 01
CONSTANT LEDS, 02
ULA:
	NAMEREG S0, NUM_A
	NAMEREG S1, NUM_B
	NAMEREG S2, SELEC
	INPUT NUM_A, SW		; A <= SW
	INPUT NUM_B, SW		; B <= SW
	INPUT SELEC, SW		; C <= SW
	AND NUM_A, 7		; A <= A AND 0000 0111
	AND NUM_B, 38		; B <= B AND 0011 1000
	AND SELEC, C0		; SELEC <= SELEC AND 1100 0000
	SR0 NUM_B		; B <= 000X XX00
	SR0 NUM_B		; B <= 0000 XXX0
	SR0 NUM_B		; B <= 0000 0XXX
	SR0 SELEC		; SELEC <= 0XX0 0000
	SR0 SELEC		; SELEC <= 00XX 0000
 	SR0 SELEC		; SELEC <= 000X X000
	SR0 SELEC		; SELEC <= 0000 XX00
	SR0 SELEC		; SELEC <= 0000 0XX0
	SR0 SELEC		; SELEC <= 0000 00XX
	CALL SUBTRACAO
	CALL SHIFT_RIGHT
	CALL DIVIDIR_A_2
	CALL SHIFT_LEFT
	JUMP FINALIZAR
	
	SUBTRACAO:
		
	COMPARE SELEC, 00	; IF SELEC = 00, THEN Z <=1, ELSE Z <= 0
	RETURN NZ
	SUB NUM_A, NUM_B	; A <= A-B
	RETURN

	SHIFT_RIGHT:

	COMPARE SELEC, 01	; IF SELEC = 01, THEN Z <= 1, ELSE Z <= 0
	RETURN NZ
	COMPARE NUM_B,00	; IF B = 00 THEN Z <= 1, ELSE Z <= 0
	RETURN Z

		OK_SHIFT_RIGHT:
		SR0 NUM_A
		SUB NUM_B,01
		JUMP NZ, OK_SHIFT_RIGHT
		RETURN

	
	DIVIDIR_A_2:
	
	COMPARE SELEC, 02	;IF SELEC = 2, THEN Z <= 1, ELSE Z <=0
	RETURN NZ		
	SR0 NUM_A		; A <= 0000 00XX
	RETURN

	SHIFT_LEFT:

	COMPARE SELEC, 03	; IF SELEC = 01, THEN Z <= 1, ELSE Z <= 0
	RETURN NZ
	COMPARE NUM_B,00	; IF B = 00 THEN Z <= 1, ELSE Z <= 0
	RETURN Z

		OK_SHIFT_LEFT:
		SL0 NUM_A
		SUB NUM_B,01
		JUMP NZ, OK_SHIFT_LIGHT
		RETURN

	FINALIZAR:
	
	OUTPUT NUM_A, LEDS	; LEDS <= A
	JUMP ULA		; REINICILIZA O PROGRAMA			
		